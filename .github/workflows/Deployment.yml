name: Create Docker Image and Deploy the conatiner
on:
 workflow_call:
jobs:
 build:
  runs-on: self-hosted
  
  steps:
   - name: Checkout
     uses: actions/checkout@v2
   - name: Configure AWS Credentials
     uses: aws-actions/conigure-aws-credentials@v1
     with:
      aws_access_key_id: ${{secets.AWS_ACCESS_KEY_ID
      aws_secret_access_key: ${{secret.AWS_SECRET_ACCESS_KEY}}
      aws_region: us-east-1
   - name: Login to Amazo ECR
     id: login-ecr
     uses: aws-actions/amazon-ecr-login@v1
   - name: Build, tag, and Push image to Amazon ECR
     env:
      ECR_REGISTRY: ${{steps.login-ecr.output.registry}}
      ECR_REPOSITORY: ecr-docker-images 
   
   - name: Setup BuildX
     uses: docker/setup-buildx-action@v1
     
   - name: Build the docker image
     run: |
        cp -rf /home/ubuntu/actions-runner/_work/Deployment-reusable-workflow/Dockerfile /home/ubuntu/actions-runner/_work/Deployment-reusable-workflow/Deployment-reusable-workflow/
        docker build -t myapp:1.1 .
   
 DEV:
  runs-on: self-hosted
  environment: DEV
  needs: build
  steps:
   - name: Create and Run docker image 
     run: docker run --name mywebapp1 -d -P myapp:1.1
 QA:
  runs-on: self-hosted
  environment: QA
  needs: DEV
  steps:
   - name: Deploying contanier to QA 
     run: docker run --name mywebapp2 -d -P myapp:1.1
 PROD:
  runs-on: self-hosted
  environment: PROD
  needs: QA
  steps:
   - name: Deploying container to PROD
     run: docker run --name mywebapp3 -d -P myapp:1.1
